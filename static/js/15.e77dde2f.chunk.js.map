{"version":3,"sources":["../node_modules/three/examples/jsm/controls/OrbitControls.js","../node_modules/three/examples/jsm/loaders/RGBELoader.js"],"names":["OrbitControls","object","domElement","undefined","console","warn","document","error","this","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","prototype","Object","create","EventDispatcher","constructor","MapControls","call","RGBELoader","manager","DataTextureLoader","UnsignedByteType","assign","parse","buffer","rgbe_error","rgbe_error_code","msg","fgets","lineLimit","consume","p","pos","i","len","s","chunk","String","fromCharCode","apply","Uint16Array","subarray","indexOf","byteLength","slice","RGBEByteToRGBFloat","sourceArray","sourceOffset","destArray","destOffset","e","RGBEByteToRGBHalf","DataUtils","toHalfFloat","byteArray","Uint8Array","rgbe_header_info","line","match","gamma_re","exposure_re","format_re","dimensions_re","header","valid","string","comments","programtype","format","gamma","exposure","width","height","charAt","parseFloat","parseInt","RGBE_ReadHeader","w","h","image_rgba_data","data_rgba","count","byteValue","scanline_buffer","ptr","ptr_end","l","off","isEncodedRun","rgbeStart","scanline_width","num_scanlines","RGBE_ReadPixels_RLE","data","RGBEFormat","FloatType","numElements","floatArray","Float32Array","j","RGBFormat","HalfFloatType","halfArray","setDataType","value","load","url","onLoad","onProgress","onError","texture","texData","encoding","RGBEEncoding","minFilter","NearestFilter","magFilter","generateMipmaps","flipY","LinearEncoding","LinearFilter"],"mappings":"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","file":"static/js/15.e77dde2f.chunk.js","sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from '../../../build/three.module.js';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t// the target DOM element for key events\n\tthis._domElementKeyEvents = null;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().invert();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\tvar twoPI = 2 * Math.PI;\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\n\t\t\tvar min = scope.minAzimuthAngle;\n\t\t\tvar max = scope.maxAzimuthAngle;\n\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t}\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseDown( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseMove( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseUp( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearEncoding,\n\tLinearFilter,\n\tNearestFilter,\n\tRGBEEncoding,\n\tRGBEFormat,\n\tRGBFormat,\n\tUnsignedByteType\n} from '../../../build/three.module.js';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nvar RGBELoader = function ( manager ) {\n\n\tDataTextureLoader.call( this, manager );\n\n\tthis.type = UnsignedByteType;\n\n};\n\nRGBELoader.prototype = Object.assign( Object.create( DataTextureLoader.prototype ), {\n\n\tconstructor: RGBELoader,\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse: function ( buffer ) {\n\n\t\tvar\n\t\t\t/* return codes for rgbe routines */\n\t\t\t//RGBE_RETURN_SUCCESS = 0,\n\t\t\tRGBE_RETURN_FAILURE = - 1,\n\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: console.error( 'THREE.RGBELoader Read Error: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_write_error: console.error( 'THREE.RGBELoader Write Error: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_format_error: console.error( 'THREE.RGBELoader Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: console.error( 'THREE.RGBELoader: Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn RGBE_RETURN_FAILURE;\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tvar p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '', chunkSize = 128,\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) )\n\t\t\t\t;\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\t\t\t\tvar line, match,\n\n\t\t\t\t\t// regexes to parse header info fields\n\t\t\t\t\tmagic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tvar data_rgba, offset, pos, count, byteValue,\n\t\t\t\t\tscanline_buffer, ptr, ptr_end, i, l, off, isEncodedRun,\n\t\t\t\t\tscanline_width = w, num_scanlines = h, rgbeStart\n\t\t\t\t;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tdata_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0; pos = 0; ptr_end = 4 * scanline_width;\n\t\t\t\trgbeStart = new Uint8Array( 4 );\n\t\t\t\tscanline_buffer = new Uint8Array( ptr_end );\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tptr = 0;\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tisEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tbyteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tl = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\toff = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tvar RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\n\t\t};\n\n\t\tvar RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 0 ] * scale );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 1 ] * scale );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 2 ] * scale );\n\n\t\t};\n\n\t\tvar byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tvar rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tif ( RGBE_RETURN_FAILURE !== rgbe_header_info ) {\n\n\t\t\tvar w = rgbe_header_info.width,\n\t\t\t\th = rgbe_header_info.height,\n\t\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\t\t\tif ( RGBE_RETURN_FAILURE !== image_rgba_data ) {\n\n\t\t\t\tswitch ( this.type ) {\n\n\t\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\t\tvar data = image_rgba_data;\n\t\t\t\t\t\tvar format = RGBEFormat; // handled as THREE.RGBAFormat in shaders\n\t\t\t\t\t\tvar type = UnsignedByteType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FloatType:\n\n\t\t\t\t\t\tvar numElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tvar floatArray = new Float32Array( numElements );\n\n\t\t\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data = floatArray;\n\t\t\t\t\t\tvar format = RGBFormat;\n\t\t\t\t\t\tvar type = FloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\t\tvar numElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tvar halfArray = new Uint16Array( numElements );\n\n\t\t\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data = halfArray;\n\t\t\t\t\t\tvar format = RGBFormat;\n\t\t\t\t\t\tvar type = HalfFloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.error( 'THREE.RGBELoader: unsupported type: ', this.type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\twidth: w, height: h,\n\t\t\t\t\tdata: data,\n\t\t\t\t\theader: rgbe_header_info.string,\n\t\t\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\t\t\texposure: rgbe_header_info.exposure,\n\t\t\t\t\tformat: format,\n\t\t\t\t\ttype: type\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tsetDataType: function ( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\ttexture.encoding = RGBEEncoding;\n\t\t\t\t\ttexture.minFilter = NearestFilter;\n\t\t\t\t\ttexture.magFilter = NearestFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn DataTextureLoader.prototype.load.call( this, url, onLoadCallback, onProgress, onError );\n\n\t}\n\n} );\n\nexport { RGBELoader };\n"],"sourceRoot":""}